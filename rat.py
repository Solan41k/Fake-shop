import telebot
import sqlite3
import dotenv
import os

from telebot import types
from database import *

dotenv.load_dotenv()
ratbot = telebot.TeleBot(os.getenv("RAT_TOKEN"))
button = ["–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏","–ö–∞—Ä—Ç—ã","–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç—É","–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É","–ò—Å–∫–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id","–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"]
passw = os.getenv("RAT_PASS")

@ratbot.message_handler(commands=["start"])
def start(message):
    print(os.getenv("RAT_PASS"))
    markup = types.ReplyKeyboardMarkup()
    for el in button:
        markup.add(types.KeyboardButton(el))
    ratbot.send_message(message.chat.id,'–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',reply_markup=markup)
    ratbot.register_next_step_handler(message,han1)

@ratbot.message_handler(func=lambda message: any(word in button for word in button))
def han1(message):
    try:
        if message.text in button:
            ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
            ratbot.register_next_step_handler(message,mainhan,message.text)
        else:
            try:ratbot.delete_message(message.chat.id,message.message_id)
            except:pass
    except Exception as e:
        ratbot.send_message(message.chat.id,str(e))

def mainhan(message,button:str):
    if message.text.strip() == passw:
        match button:
            case "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
                text = ''   
                try:   
                    for chat_id,tg_username,city,rayon in get_users():
                        text += f"id: {chat_id} username: @{tg_username} –ì–æ—Ä–æ–¥: {city} –†–∞–π–æ–Ω: {rayon}\n\n" 
                    ratbot.send_message(message.chat.id,text)
                except Exception as e:
                    if not get_users():
                        ratbot.send_message(message.chat.id,"No one users found")
                    else:
                        ratbot.send_message(message.chat.id,str(e))
            case "–ö–∞—Ä—Ç—ã":
                text ="<b>üìé–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—Ç: </b>\n\n"
                for c_id,c,a in get_cards():
                    text += f"üí≥ {c_id} - <code>{c}</code>\n‚îîüá∑üá∫{a}\n\n"
                ratbot.send_message(message.chat.id,text,parse_mode="HTML") 
            case "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É":
                ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: ")
                ratbot.register_next_step_handler(message,add_crd_input1)
            case "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç—É":
                ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: ")
                ratbot.register_next_step_handler(message,delete_card_)
            case "–ò—Å–∫–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id":
                ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
                ratbot.register_next_step_handler(message,search_user)
                # chat_id,tg_username,city,rayon in searc_user()
            case "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
                ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
                ratbot.register_next_step_handler(message,delete_user)
    else:
        ratbot.send_message(message.chat.id,"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑: ")
        ratbot.register_next_step_handler(message,mainhan,button)

def delete_user(message):
    try:
        int(message.text)
        delete_user_wid(message.text)
        ratbot.send_message(message.chat.id,"–£—Å–ø–µ—à–Ω–æ")
    except ValueError:
        ratbot.send_message(message.chat.id,"–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑: ")
        ratbot.register_next_step_handler(message,search_user)
    except Exception as e:
        ratbot.send_message(message.chat.id,f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}")
    

def search_user(message):
    try:
        int(message.text)
        chat_id,tg_username,city,rayon = get_user_wid(message.text)
        text = f"id: {chat_id} username: @{tg_username} –ì–æ—Ä–æ–¥: {city} –†–∞–π–æ–Ω: {rayon}"
        ratbot.send_message(message.chat.id,text)
    except ValueError:
        ratbot.send_message(message.chat.id,"–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑: ")
        ratbot.register_next_step_handler(message,search_user)
    except Exception as e:
        ratbot.send_message(message.chat.id,f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}")
    

def delete_card_(message):
    try:
        int(message.text)
        delete_card(message.text)
        ratbot.send_message(message.chat.id,"–£—Å–ø–µ—à–Ω–æ")
    except ValueError:
        ratbot.send_message(message.chat.id,"–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑: ")
        ratbot.register_next_step_handler(message,delete_card_)
    except Exception as e:
        ratbot.send_message(message.chat.id,f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}")
    

def add_crd_input1(message):
    try:
        n_c = int(message.text)
        ratbot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–∞—Ä—Ç—ã: ")
        ratbot.register_next_step_handler(message,add_crd_input2,n_c)
    except ValueError:
        ratbot.send_message(message.chat.id,"–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑: ")
        ratbot.register_next_step_handler(message,add_crd_input1)
    except Exception as e:
        ratbot.send_message(message.chat.id,f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}")
    

def add_crd_input2(message,number_card):
    try:
        write_card(number_card,message.text)
        ratbot.send_message(message.chat.id,"–£—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        ratbot.send_message(message.chat.id,f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n\n{e}")
    

ratbot.infinity_polling()